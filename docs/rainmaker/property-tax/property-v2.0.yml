openapi: 3.0.0
info:
  version: "1.0.0"
  title: eGov Property Tax Information System.
  description: >
    APIs for Property Tax module. This modules handles assessment of new
    properties, changes to existing properties (Detail Updates, division of
    property, etc.),  search of required properties and property tax.
  contact:
    name: Egovernments Foundation
    email: contact@egovernments.org
x-module: PT
x-common-path: >-
  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml
paths:
  /property/_create:
    post:
      summary: Create new property.
      description: API to create new property.
      x-roles: PT_CEMP,CITIZEN
      responses:
        '201':
          description: Property created sucessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '400':
          description: Property(s) creation failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      tags:
        - Property
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequest'
        description: Details for the new property + RequestInfo meta data.
        required: true
  /property/_update:
    post:
      summary: Update existing property.
      description: Updates a given `Property` with newer details.
      x-roles: PT_CEMP,CITIZEN
      tags:
        - Property
      responses:
        '200':
          description: Update Property successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyResponse'
        '400':
          description: Update Property failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyRequest'
        description: Request header for the property Request.
        required: true
  /property/_search:
    post:
      summary: Get the list of properties defined in the system.
      description: |
        Get the properties list based on the input parameters.
      x-roles: PT_CEMP,CITIZEN
      parameters:
        - $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/parameters/RequestInfo
        - $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/parameters/tenantId
        - name: name
          in: query
          description: Name of owner whose property is to be searched.
          required: false
          allowEmptyValue: true
          schema:
            type: string
            format: varchar
        - name: ids
          in: query
          description: List of system generated ids of properties.
          required: false
          schema:
            type: string
            format: varchar
        - name: buildingNumbers
          in: query
          required: false
          description: List of buildingNumbers to search.
          schema:
            type: string
            exclusiveMinimum: true
            exclusiveMaximum: false
            minLength: 4
            maxLength: 128
        - name: oldpropertyids
          in: query
          required: false
          description: List of oldPropertyIds to search..
          schema:
            type: string
            exclusiveMinimum: true
            exclusiveMaximum: false
            minLength: 4
            maxLength: 128
        - name: mobileNumber
          in: query
          description: MobileNumber of owner whose property is to be searched.
          required: false
          schema:
            type: integer
            format: int64
        - name: fromDate
          in: query
          description: Fetches properties with created time after fromDate.
          required: false
          schema:
            type: number
        - name: toDate
          in: query
          description: Fetches properties with created time till toDate.
          required: false
          schema:
            type: number

 
      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertySearchResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      tags:
        - Property
  /property/_delete:
    post:
      summary: Delete existing property.
      description: The API will delete the property associated with the given propertyId from the system  The API works in idempotent manner.
      x-roles: PT_ADMIN
      tags:
        - Property
      responses:
        '200':
          description: Deleted Property successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyDeleteResponse'
        '404':
          description: Delete Property failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDeleteRequest'
        description: Request header for the property delete Request.
        required: true      
  /property/_cancel:
    post:
      summary: Deactivate/cancel an active property.
      description: The API will deactivate/cancel the property associated with the given propertyId from the system. The API works in idempotent manner
      x-roles: PT_ADMIN
      tags:
        - Property
      responses:
        '200':
          description: Property deactivated successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PropertyDeleteResponse'
        '404':
          description: Property not found
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyDeleteRequest'
        description: Request header for the property delete Request.
        required: true              
      
  /building/_create:
    post:
      summary: Create new building object.
      description: API to create new building object to capture the construction details of the property .
      x-roles: PT_CEMP,CITIZEN
      responses:
        '201':
          description: Building created sucessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuildingResponse'
        '400':
          description: Building creation failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      tags:
        - Building
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingRequest'
        description: Details for the new building + RequestInfo meta data.
        required: true
  /building/_update:
    post:
      summary: Update existing building.
      description: Updates a given building with newer details.
      x-roles: PT_CEMP,CITIZEN
      tags:
        - Building
      responses:
        '200':
          description: Building details updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuildingResponse'
        '400':
          description: Failed to update Building details
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingRequest'
        description: Request header for the building Request.
        required: true
  /building/_search:
    post:
      summary: Get the list of Buildings defined in the system.
      description: |
        Get the building list based on the input parameters.
      x-roles: PT_CEMP,CITIZEN
      parameters:
        - $ref: https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/definitions/RequestInfo
        - $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/parameters/tenantId
        - name: propertyIds
          in: query
          description: List of system generated ids of properties.
          required: false
          schema:
            type: string
            format: varchar
        - name: buildingNumbers
          in: query
          required: false
          description: List of buildingNumbers to search.
          schema:
            type: string
            exclusiveMinimum: true
            exclusiveMaximum: false
            minLength: 4
            maxLength: 128
        - name: fromDate
          in: query
          description: Fetches building with created time after fromDate.
          required: false
          schema:
            type: number
        - name: toDate
          in: query
          description: Fetches building with created time till toDate.
          required: false
          schema:
            type: number

      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuildingSearchResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      tags:
        - Building
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
        description: Details for the new building + RequestInfo meta data.
        required: true
  /building/_delete:
    post:
      summary: Delete existing building details
      description: Deletes  building detials  based on building number from the system.
      x-roles: PT_ADMIN
      tags:
        - Building
      responses:
        '200':
          description: deleted building detials successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuildingDeleteResponse'
        '404':
          description: Building details not found
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingDeleteRequest'
        description: Request header for the building Request.
        required: true
  /building/_cancel:
    post:
      summary: Deactivates/Cancels existing building.
      description: Deactivates/Cancels based on the given building number
      x-roles: PT_ADMIN
      tags:
        - Building
      responses:
        '200':
          description: Deactivates/Cancels building successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BuildingDeleteResponse'
        '400':
          description: Deactivation of building failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingDeleteRequest'
        description: Request header for the building cancel/deactivate Request.
        required: true
  
  /assessment/_create:
    post:
      summary: Creates assessment object.
      description: API to create assessment for the given buildingNumber and financialYear. Creating assessment will result in generation of demand for the given financial year
      x-roles: PT_CEMP,CITIZEN
      responses:
        '201':
          description: Assessment created sucessfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '400':
          description: Assessment creation failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequest'
        description: Details for the new assessment + RequestInfo meta data.
        required: true
  /assessment/_update:
    post:
      summary: Updates existing assessment.
      description: The update API is used to reassess the building for the given financial year. Updating assessment will update the demand for the given financial year
      x-roles: PT_CEMP,CITIZEN
      tags:
        - Assessment
      responses:
        '200':
          description: Assessment details updated successfully
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '400':
          description: Failed to update Assessment details
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequest'
        description: Request header for the assessment Request.
        required: true
  /assessment/_search:
    post:
      summary: Get the list of assessment defined in the system.
      description: |
        Get the assessment list based on the input parameters.
      x-roles: PT_CEMP,CITIZEN
      parameters:
        - $ref: https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
        - $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/parameters/tenantId
          required: true  
        - name: propertyIds
          in: query
          description: List of system generated ids of properties.
          required: false
          schema:
            type: string
            format: varchar
        - name: buildingNumbers
          in: query
          required: false
          description: List of buildingNumbers to search.
          schema:
            type: string
            exclusiveMinimum: true
            exclusiveMaximum: false
            minLength: 4
            maxLength: 128
        - name: assessmentNumbers
          in: query
          description: List of system assessment ids of properties.
          required: false
          schema:
            type: string
            format: varchar
        - name: financialYear
          in: query
          description: The financial Year of the assessment
          required: false
          schema:
            type: string
            format: varchar
        - name: fromDate
          in: query
          description: Fetches assessments with created time after fromDate.
          required: false
          schema:
            type: number
        - name: toDate
          in: query
          description: Fetches assessments with created time till toDate.
          required: false
          schema:
            type: number

      responses:
        '200':
          description: Successful response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '400':
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      tags:
        - Assessment
      requestBody:
        content:
          application/json:
            schema:
              $ref: https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
        description:  RequestInfo meta data.
        required: true
  /assessment/_delete:
    post:
      summary: Delete existing assessment details
      description: Deletes  assessment detials  based on assessment number from the system.
      x-roles: PT_ADMIN
      tags:
        - Assessment
      responses:
        '200':
          description: deleted assessment successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '404':
          description: Assessment details not found
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequest'
        description: Request header for the assessment Request.
        required: true
  /assessment/_cancel:
    post:
      summary: Deactivates/Cancels existing assessment.
      description: Deactivates/Cancels based on the given assessment number
      x-roles: PT_ADMIN
      tags:
        - Assessment
      responses:
        '200':
          description: Deactivates/Cancels assessment successful
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AssessmentResponse'
        '400':
          description: Deactivation of assessment failed
          content:
            '*/*':
              schema:
                $ref: >-
                  https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schema/ErrorRes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssessmentRequest'
        description: Request header for the assessment cancel/deactivate Request.
        required: true
        
        
servers:
  - url: https://egov-micro-dev.egovernments.org
components:
  schemas:
    PropertyInfo:
      type: object
      description: >-
        This is lightweight property object that can be used as reference by
        definitions needing property linking. Actual Property Object extends
        this to include more elaborate attributes of the property.
      properties:
        id:
          type: string
          description: Unique Identifier of the Property for internal reference.
          readOnly: true
          minLength: 1
          maxLength: 64
        propertyId:
          type: string
          description: Unique Identifier of the Property.
          readOnly: true
          minLength: 1
          maxLength: 64
        tenantId:
          type: string
          description: tenant id of the Property
          maxLength: 256
          minLength: 2
          nullable: false
        accountId:
          type: string
          description: UUID of the user to which the property will be associated
          maxLength: 64
          minLength: 1
          readOnly: true
        oldPropertyId:
          type: string
          description: >-
            Old upic no of the Property. ULBs have the existing property in
            their system/manual records with their identification number, they
            want to continue the old reference number in this case the same
            identification number will be captured here.
          maxLength: 256
          minLength: 1
        status:
          type: string
          description: status of the Property
          enum:
            - ACTIVE
            - INACTIVE
        address:
          $ref: '#/components/schemas/Address'
      required:
        - address
        - tenantId
    Property:
      allOf:
        - $ref: '#/components/schemas/PropertyInfo'
        - type: object
          description: A Object holds the basic data for a property
          properties:
            acknowldgementNumber:
              type: string
              description: >-
                Acknowldgement number given to citizen on submitting the
                application for creation or modification of the property.
              maxLength: 64
              minLength: 1
              readOnly: true
            propertyType:
              type: string
              description: >-
                Type of a property like Private, Vacant Land, State Government,
                Central Government etc.
              maxLength: 64
              example: VACANT
              
            ownershipCategory:
              type: string
              description: The type of ownership of the property.
              maxLength: 64
            owners:
              description: 'Property owners, these will be citizen users in system.'
              type: array
              items:
                $ref: '#/components/schemas/OwnerInfo'
            institution:
              description: >-
                The details of institution if the ownershipCategory is
                institutional
              items:
                $ref: '#/components/schemas/Institution'
                
            creationReason:
              type: string
              description: >-
                New property comes into system either property is newly
                constructed or existing property got sub divided. Here the
                reason for creation will be captured.
              enum:
                - NEWPROPERTY
                - SUBDIVISION
            occupancyDate:
              type: integer
              format: int64
              description: >-
                Property is constructed but the tax will be applicable only from
                the occupation date (time in epoch). System capture that date
                here.
            constructionDate:
              type: integer
              format: int64
              description: >-
                The date when the property was constructed
            noOfFloors:
              type: integer
              format: int64
              description: no of floors in the property
            landArea:
              type: number
              format: float
              description: Land area of the property in sq ft
            source:
              type: string
              description: >-
                Source of a property data. The properties will be created in a
                system by different mboules
              enum:
                - PT
                - TL
                - WAS
                - DATA_MIGRATION
            documents:
              description: >-
                The documents attached during property create, modification or any
                transaction happened on the property.
              type: array
              items:
                $ref: '#/components/schemas/Document'
            additionalDetails:
              type: object
              description: 'The json (array of ''#/definitions/Factor'')'
          required:
            - propertyType
            - landArea
            - source
            - address
            - owners
            - tenantId

    Building:
      description: >-
        Financial year wise construction details will be capture here. For each
        financial year construction details may change.
      type: object
      properties:
        financialYear:
          type: string
          description: Latest tax paid year.
          example: 2019-20
        buildingNumber:
          type: string
          description: unique building number to identify the construction details.
          maxLength: 64
          readOnly: true
        id:
          type: string
          description: id of the property with which the building is associated.
          maxLength: 64
          readOnly: true
        buildingApprovalDate:
          type: number
          description: >-
            There will be work flow to create a new building in a system. The
            building date is the final approval and UPIC no generation date.
        status:
          type: string
          description: status of the Building
          enum:
            - ACTIVE
            - INACTIVE
            
        usageCategory:
          type: string
          description: >-
            This is about the usage of the property like Residential,
            Non-residential, Mixed(Property which is getting used for
            Residential, Non-residential purpose)
          maxLength: 64
          example: RESIDENTIAL
        source:
          type: string
          description: >-
            Source of a building data. The building will be created in a
            system based on the data avaialble in their manual records or during
            field survey. There can be more from client to client.
          enum:
            - MUNICIPAL_RECORDS
            - FIELD_SURVEY
        buildUpArea:
          type: number
          format: float
          description: Total built up area in sq ft
        auditDetails:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/AuditDetails
        units:
          description: >-
            List of Units in the property. E.g. A property might have 2 units in
            ground floor and 1 ion first floor. Unit can be Room, floor or any
            bounded area with a defined usage.
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        documents:
          description: >-
            The documents attached during building detail modification or any
            transaction happened on the property.
          type: array
          items:
            $ref: '#/components/schemas/Document'
        additionalDetails:
          type: object
          description: 'The json (array of ''#/definitions/Factor'')'
        channel:
          type: string
          description: >-
            Building details can be created from different channels Eg. System
            (properties created by ULB officials), CFC Counter (From citizen
            faciliation counters) etc. Here we are defining some known channels,
            there can be more client to client.
          enum:
            - SYSTEM
            - CFC_COUNTER
            - CITIZEN
            - DATA_ENTRY
            - MIGRATION
      required: 
          - financialYear
          - status
          - usageCategory
          - source
          - buildUpArea
          
            
    Institution:
      type: object
      properties:
        id:
          type: string
          maxLength: 64
          description: Unique Identifier of the Institution(UUID).
        tenantId:
          type: string
          description: tenant id of the Property
          maxLength: 256
        type:
          type: string
          description: Institution type.
          maxLength: 64
        designation:
          type: string
          maxLength: 64
          description: Designation of the person creating/updating building details on behalf of the institution
        additionalDetails:
          type: object
          description: 'Json object to capture any extra information which is not accommodated by model'

   
    OwnerInfo:
      type: object
      properties:
          name:
            type: string
            description: >-
              The name of the owner.
            maxLength: 256
          mobileNumber:
            type: string
            description: >-
              MobileNumber of the owner.
            maxLength: 256
          gender:
            type: string
            description: >-
              Gender of the owner.
            maxLength: 256
          fatherOrHusbandName:
            type: string
            description: >-
              Father or Husband name of the owner.
            maxLength: 256
          correspondenceAddress:
            type: string
            description: >-
              The current address of the owner for correspondence.
            maxLength: 1024
          isPrimaryOwner:
            type: boolean
            description: The owner is primary or not
          ownerShipPercentage:
            type: number
            format: double
            description: Ownership percentage.
          ownerType:
            type: string
            description: >-
              Type of owner, based on this option Exemptions will be applied.
              This is master data defined in mdms.
            maxLength: 256
          institutionId:
            type: string
            description: >-
              The id of the institution if the owner is the authorized person
              for one
            maxLength: 64
          documents:
            description: The documents attached by owner for exemption.
            type: array
            items:
              $ref: '#/components/schemas/Document'
          relationship:
            type: string
            description: The relationship of gaurdian.
            enum:
              - FATHER
              - HUSBAND
          additionalDetails:
            type: object
            description: 'Json object to capture any extra information which is not accommodated of model'

      required:
          - name
          - mobileNumber
          - gender
          - fatherOrHusbandName
          - relationship

   
    Address:
      allOf:
        - $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/Address
        - type: object
          description: Address of the property.
          properties:
            buildingName:
              type: string
              description: Name of the building
              maxLength: 64
              minLength: 2
            street:
              type: string
              description: Street Name
              maxLength: 64
              minLength: 2
            locality:
              $ref: >-
                https://raw.githubusercontent.com/egovernments/egov-services/master/docs/egov-location/contracts/v11-0-0.yml#/definitions/Boundary
            additionalDetails:
              type: object
              description: 'Json object to capture any extra information which is not accommodated of model'

          required: 
            - locality
    
    Document:
      type: object
      description: >-
        This object holds list of documents attached during the transaciton for
        a property
      properties:
        id:
          type: string
          maxLength: 64
          description: system id of the Document.
        documentType:
          type: string
          description: >-
            unique document type code, should be validated with document type
            master
        fileStore:
          type: string
          description: File store reference key.
        documentUid:
          type: string
          maxLength: 64
          description: 'The unique id(Pancard Number,Adhar etc.) of the given Document.'
        additionalDetails:
          type: object
          description: 'Json object to capture any extra information which is not accommodated by model'

    Unit:
      type: object
      properties:
        id:
          type: string
          description: Unique Identifier of the Unit(UUID).
        tenantId:
          type: string
          description: tenant id of the Property
          maxLength: 256
          minLength: 2
        floorNo:
          type: string
          description: floor number of the Unit
          maxLength: 64
          minLength: 1
          nullable: false
        unitArea:
          type: number
          format: float
          description: Area of the defined Unit.
          nullable: false
        usageCategory:
          type: string
          description: >-
            This is about the usage of the property like Residential,
            Non-residential, Mixed(Property witch is gettiong used for
            Residential, Non-residential purpose)
          maxLength: 64
          minLength: 1
        occupancyType:
          type: string
          description: Value denoting if the unit is rented or occupied by owner
          enum:
            - OWNER
            - TENANT
          maxLength: 64
          minLength: 1
        occupancyDate:
          type: number
          format: int64
          description: Date on which unit is occupied.
        constructionType:
          type: string
          description: Construction type is defined in MDMS ConstructionTypeMaster.
          maxLength: 64
          minLength: 1
        arv:
          type: number
          format: double
          description: 'Annual rental value(arv), if occupancy type is Tenant.'
        additionalDetails:
          type: object
          description: 'Json object to capture any extra information which is not accommodated by model'
  
    PropertyRequest:
      description: >-
        Contract class to receive request. Array of Property items  are used in
        case of create . Where as single Property item is used for update
      properties:
        RequestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
        Property:
          description: Used for search result and create only
          $ref: '#/components/schemas/Property'
    PropertyResponse:
      description: >-
        Contains the ResponseInfo and the created/updated property
      properties:
        ResponseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ResponseInfo
        Property:
          description: Used for update and create only
          $ref: '#/components/schemas/Property'
    PropertySearchResponse:
      description: >-
        Contract class to send response.  Property items  is used in
        case of search results or response for search. 
      properties:
        ResponseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ResponseInfo
        Properties:
          description: Used for search result and create only
          items:
            $ref: '#/components/schemas/Property'
            
    PropertyDeleteRequest:
      description: Class to send the request body for property delete
      properties:
        RequestInfo:
           $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
        tenantId:
          type: string
          description: The tenantId of the property to be deleted
        propertyId: 
          type: string
          description: The propertyId of the property to be deleted
      required:
        - RequestInfo
        - tenantId
        - propertyId

    PropertyDeleteResponse:
      description: Class to send the request body for property delete
      properties:
        ResponseInfo:
           $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ResponseInfo
        tenantId:
          type: string
          description: The tenantId of the property to be deleted
        propertyId: 
          type: string
          description: The propertyId of the property to be deleted

            
    BuildingRequest:
      description: >-
        Contract class to receive request. Array of building items  are used
        in case of create . Where as single building item is used for update
      properties:
        RequestInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
        Buildings:
          description: Used for search result and create only
          $ref: '#/components/schemas/Building'
    BuildingResponse:
      description: >-
        Contract class to send response. Array of building items  are used in
        case of search results or response for create. Where as single
        building item is used for update
      properties:
        ResponseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ResponseInfo
        Buildings:
          description: Used for update and create only
          $ref: '#/components/schemas/Building'
    BuildingSearchResponse:
      description: >-
        Contains the ResponseInfo and list of buildings returned by system
      properties:
        ResponseInfo:
          $ref: >-
            https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ResponseInfo
        Buildings:
          description: Used for search result and create only
          type: array
          items:
            $ref: '#/components/schemas/Building'
            
    BuildingDeleteRequest:
      description: Class to send the request body for building delete
      properties:
        RequestInfo:
           $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
        tenantId:
          type: string
          description: The tenantId of the building to be deleted
        buildingNumber: 
          type: string
          description: The building number of the building to be deleted
      required:
        - RequestInfo
        - tenantId
        - buildingNumber
    BuildingDeleteResponse:
      description: Class to send the request body for property delete
      properties:
        ResponseInfo:
           $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ResponseInfo
        tenantId:
          type: string
          description: The tenantId of the building to be deleted
        buildingNumber: 
          type: string
          description: The buidling number of the building to be deleted
          
    Assessment:
      type: object
      description: Contains the assessment details of a building
      properties:
        tenantId:
          type: string
          description: The tenantId of the building for which assessment is done
        assessmentNumber:
          type: string
          description: The assessment number generated by the system for the given assessment details
        propertyId:
          type: string
          description: The propertyId against which assessment is done
        buildingNumber:
          type: string
          description: The building number for which assessment is done
        financialYear:
          type: string
          description: The financialYear of the assessmnet
        additionalDetails:
          type: object
          description: 'Json object to capture any extra information which is not accommodated of model'
      required:
        - tenantId
        - buildingNumber
        - financialYear
        
    AssessmentRequest:
      description: The request to create or update an assessment. Contains the RequestInfo and the assessment details
      properties:
         RequestInfo:
           $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/RequestInfo
         Assessment:
          description: The assessment details of the building
          $ref: '#/components/schemas/Assessment'
    AssessmentResponse:
      description: The response of create or update of assessment. Contains the ResponseInfo and created/updated assessment
      properties:
         RequestInfo:
             $ref: >-
              https://raw.githubusercontent.com/egovernments/egov-services/PT_APPLY_PAY/docs/common/contracts/v1-1-1.yml#/components/schemas/ResponseInfo
         Assessment:
          description: The assessment details of the building
          $ref: '#/components/schemas/Assessment'
